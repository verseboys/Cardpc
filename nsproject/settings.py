"""
Django settings for nsproject project.

Generated by 'django-admin startproject' using Django 2.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
PROJECT_DIR = os.path.dirname(os.path.abspath(__file__))
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
BUILD_DIR = os.path.join(BASE_DIR, 'build')

if os.environ.get('DJANGO_DEBUG', 'true').lower() in ('f', 'false', 'n', 'no', '0'):
    DEBUG = False
else:
    DEBUG = True

# 我们用通过 nginx 来挡掉不合法的 Host，这里使用 * 来简化配置
ALLOWED_HOSTS = ['*']


INSTALLED_APPS = [
    'cardpc',

    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'natureself.webapp',
    'natureself.admin',
    'natureself.django.core',
    'natureself.django.account',
    'natureself.django.media',
    'natureself.django.notification',
    'natureself.django.course',
    'natureself.django.otp',
]

if not DEBUG:
    INSTALLED_APPS += [
        'raven.contrib.django.raven_compat',
    ]

INSTALLED_APPS += [
    'webpack_loader',
]

WEBPACK_LOADER = {
    'DEFAULT': {
        'CACHE': not DEBUG,
        'BUNDLE_DIR_NAME': '',
        'STATS_FILE': os.path.join(BUILD_DIR, 'webpack-stats-webapp.json'),
        'POLL_INTERVAL': 0.1,
        'TIMEOUT': None,
        'IGNORE': [r'.+\.hot-update.js', r'.+\.map']
    }
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    'natureself.django.core.middleware.DecodeBodyJsonMiddleware',
    'natureself.django.core.middleware.VisitorLocationMiddleware',

    'django_user_agents.middleware.UserAgentMiddleware',
]

if DEBUG:
    # enable cors handling only in debug mode
    INSTALLED_APPS += ['corsheaders']
    MIDDLEWARE = ['corsheaders.middleware.CorsMiddleware'] + MIDDLEWARE
    CORS_ORIGIN_ALLOW_ALL = True

ROOT_URLCONF = 'nsproject.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'nsproject.wsgi.application'


# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

AUTH_USER_MODEL = 'cardpc.User'
AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'natureself.django.account.backends.SmsCodeBackend',
    'natureself.django.account.backends.EmailCodeBackend',
]

LOGIN_URL = '/account/login/'

# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
]

STATICFILES_DIRS = [
    os.path.join(BUILD_DIR, 'webapp'),
    os.path.join(BASE_DIR, 'natureself/assets/'),
]

STATIC_ROOT = os.path.join(BUILD_DIR, 'static')
STATIC_URL = '/static/'

MEDIA_ROOT = os.path.join(BASE_DIR, 'data')
MEDIA_URL = '/media/'

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'root': {
        'level': 'INFO',
        'handlers': ['console'],
    },
    'handlers': {
        'console': {
            'level': 'DEBUG',
            'filters': [],
            'class': 'logging.StreamHandler',
        },
    },
    'loggers': {
        'django.request': {
            'level': 'DEBUG' if DEBUG else 'INFO',
            'handlers': ['console'],
            'propagate': False,
        },
        'django.db.backends': {
            'level': 'DEBUG' if DEBUG else 'INFO',
            'handlers': ['console'],
            'propagate': False,
        },
    },
}

NS_REGISTER_VIEW = 'cardpc.views.account.api_register'

try:
    from nsproject.settings_local import *
except ModuleNotFoundError as e:
    print('Warning: settings_local.py not found, please create settings_local.py using settings_local.example.py as template.')
    raise e

# check for required settings

from django.core.exceptions import ImproperlyConfigured

# 在本地开发时，无需考虑安全性，可以全都使用相同的 SECRET_KEY，但是生产环境必须另外指定
try:
    _ = SECRET_KEY
except NameError:
    if DEBUG:
        SECRET_KEY = 'nc=g3&7b2$u_y&64z$r-k=6ivk+0n#_vp&ado6-zv553l5@(k8'
    else:
        raise ImproperlyConfigured('Missing "SECRET_KEY" in settings_local.py')
